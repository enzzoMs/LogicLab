---
import { type Icon as IconType } from "@lucide/astro";

interface Props {
  title: string;
  icon?: typeof IconType;
  linkUrl?: string;
  style?: "horizontal" | "vertical";
}

const props = Astro.props;
const { title, linkUrl, style = "horizontal" } = props;
---

{
  linkUrl ? (
    <a href={linkUrl}>
      <div class={style === "horizontal" ? "horizontal-card" : "vertical-card"}>
        <div class="card-header">
          {props.icon && <props.icon />}
          <h3>{title}</h3>
        </div>
        <slot />
      </div>
    </a>
  ) : (
    <div class={style === "horizontal" ? "horizontal-card" : "vertical-card"}>
      <div class="card-header">
        {props.icon && <props.icon />}
        <h3>{title}</h3>
      </div>
      <slot />
    </div>
  )
}

<style>
  .horizontal-card,
  .vertical-card {
    display: flex;
    flex-direction: column;
    background-color: var(--color-surface-primary);
    padding: var(--space-m) var(--space-l);
    box-shadow: 0 2px 8px #0000001a;
  }

  a {
    display: block;
    color: var(--color-text-body);
    text-decoration: none;
  }

  a .horizontal-card,
  a .vertical-card {
    height: 100%;
    transition: all 0.2s ease-in-out;
  }

  a .horizontal-card:hover,
  a .vertical-card:hover {
    box-shadow: 0 4px 16px #00000026;
  }

  h3 {
    font-size: var(--text-l);
    font-weight: var(--weight-semibold);
  }

  /* ============================================== */

  .horizontal-card .card-header {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
  }

  .horizontal-card .card-header svg {
    width: 1.75em;
    height: 1.75em;
    color: var(--color-primary);
    margin-bottom: var(--space-2xs);
  }

  /* ============================================== */

  .vertical-card {
    text-align: center;
  }

  .vertical-card .card-header svg {
    color: var(--color-primary);
    height: calc(var(--text-s) * 3.5);
    width: calc(var(--text-s) * 3.5);
    margin-bottom: var(--space-xs);
  }
</style>
